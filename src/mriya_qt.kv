#:kivy 1.7.1
#:import ListAdapter kivy.adapters.listadapter.ListAdapter
#:import Factory kivy.factory.Factory
#:import Button kivy.uix.button.Button
#:import classes kv_classes

<Screen>:
    canvas:
        Color:
            rgb: .2, .2, .2
        Rectangle:
            size: self.size

<MutableLabelTextInput@MutableTextInput>:
    Label:
        id: w_label
        pos: root.pos
        text: root.text

    TextInput:
        id: w_textinput
        pos: root.pos
        text: root.text
        multiline: root.multiline
        on_focus: root.check_focus_and_view(self)

<MutableRstDocumentTextInput@MutableTextInput>:
    RstDocument:
        id: w_label
        pos: root.pos
        text: root.text

    TextInput:
        id: w_textinput
        pos: root.pos
        text: root.text
        multiline: root.multiline
        on_focus: root.check_focus_and_view(self)


<TaskView>:

    on_task_content: app.set_task_content(self.task_index, self.task_content)
    on_task_title: app.set_task_title(self.task_index, self.task_title)
    on_task_sql: app.set_task_sql(self.task_index, self.task_sql)
    on_task_type: app.set_task_type(self.task_index, self.task_type)
    on_task_input: app.set_task_input(self.task_index, self.task_input)
    on_task_output: app.set_task_output(self.task_index, self.task_output)
    on_task_source: app.set_task_source(self.task_index, self.task_source)
    object_fileds: lv_fields

    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: None
            height: '48dp'
            padding: '5dp'
            canvas:
                Color:
                    rgb: .3, .3, .3
                Rectangle:
                    pos: self.pos
                    size: self.size
            Button:
                text: '<'
                size_hint_x: None
                width: self.height
                on_release: app.go_tasks({'tttt':''})
            TextInput:
                id:ti_task_name
                text: 'Task_Name'
            Button:
                text: 'Exec'
                size_hint_x: None
                width: self.height
                on_release: root.exec_item(root.task_index)
            Button:
                text: 'Save'
                size_hint_x: None
                width: self.height
                on_release: app.save_task(root.task_index, {'sql':ti_sql.text, 'source':ce_source.text, 'type':'SF_Query', 'output':ti_output.text, 'input':'', 'title':ti_task_name.text})
            Button:
                text: 'X'
                size_hint_x: None
                width: self.height
                on_release: app.del_task(root.task_index)
        BoxLayout:
            orientation: 'horizontal'
            BoxLayout:
                size_hint_x: 0.3
                orientation: 'vertical'
                Label:
                    size_hint_y: None
                    height:'35dp'
                    text_size: self.width, None
                    text: 'Object:'
                ComboEdit:
                    id:ce_object
                    size_hint_y: None
                    height: '30dp'
                    options: [Button(text = str(x), size_hint_y=None, height=30) for x in root.objects_list]
                    text: 'Select object' if app.get_object_from_sql(root.task_sql) is None else app.get_object_from_sql(root.task_sql)
                    on_text:root.on_object_changed()
                Label:
                    size_hint_y: None
                    height:'35dp'
                    text_size: self.width, None
                    text: 'Fields:'
                ListView:
                    id:lv_fields
                    adapter: ListAdapter( data=root.object_fileds.adapter.data, selection_mode='multiple', cls=classes.FiledListButton, on_selection_change=root.selected_object_fileds_list)
                Label:
                    size_hint_y: None
                    height:'35dp'
                    text_size: self.width, None
                    text: 'Source:'
                ComboEdit:
                    id:ce_source
                    size_hint_y: None
                    height: '30dp'
                    options: [Button(text = str(x), size_hint_y=None, height=30) for x in root.sources_list]
                    text: 'Select source' if root.task_source == '' else root.task_source
                    on_text: root.read_controls()
            BoxLayout:
                TextInput:
                    id:ti_sql
                    multiline: True
                    text: 'INPUT SQL' if root.task_sql == '' else root.task_sql
                    on_text:root.on_sql_texinput_change()
        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: None
            height:'35dp'
            Label:
                text: 'Output file:'
                size_hint_x: 0.3
                size_hint_y: None
                height:'35dp'
                text_size: self.width, None
            TextInput:
                id: ti_output
                size_hint_y: None
                height: '30dp'
                text: root.task_output



<TaskListItem>:

    height: '48sp'
    size_hint_y: None

    canvas:
        Color:
            rgb: .3, .3, .3
        Rectangle:
            pos: self.pos
            size: self.width, 1

    BoxLayout:
        padding: '5dp'
        Button:
            text: 'Del'
            size_hint_x: None
            background_color: (0.5,0,0,1) if self.state == 'normal' else (0,1,0,1)
            background_normal: ""
            on_release: app.del_task(root.task_index)
        Label:
            background_color: (0,0,0.1,1)
            text: root.task_title
        Button:
            text: 'Execute'
            size_hint_x: None
            background_color: (0,0.5,0,1) if self.state == 'normal' else (0,1,0,1)
            background_normal: ""
            width: self.height * 3
            on_release: app.exec_task(root.task_index)
        Button:
            text: 'Up'
            size_hint_x: None
            width: self.height * 2
            on_release: app.up_task(root.task_index)
        Button:
            text: 'Down'
            size_hint_x: None
            width: self.height * 2
            on_release: app.down_task(root.task_index)
        Button:
            text: '>'
            size_hint_x: None
            width: self.height
            on_release: app.edit_task(root.task_index)

<Tasks>:

    BoxLayout:

        orientation: 'vertical'

        BoxLayout:

            orientation: 'horizontal'
            size_hint_y: None
            height: '48dp'
            padding: '5dp'

            canvas:
                Color:
                    rgb: .3, .3, .3
                Rectangle:
                    pos: self.pos
                    size: self.size

            Image:
                source: 'data/icon.png'
                mipmap: True
                size_hint_x: None
                width: self.height

            Label:
                text: 'Tasks'
                font_size: '16sp'

            Button:
                text: '+'
                size_hint_x: None
                width: self.height
                on_release: app.add_task()

        ListView:
            adapter: ListAdapter(data=root.data, cls=Factory.TaskListItem, args_converter=root.args_converter)
